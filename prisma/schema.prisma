generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName  String
  lastName   String?
  email      String   @unique
  password   String
  isVerified Boolean  @default(false)
  isActive   Boolean  @default(true)
  role       UserRole @default(USER)
  carts      Cart[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Product {
  id                       String       @id @default(auto()) @map("_id") @db.ObjectId
  name                     String       @unique
  slug                     String       @unique
  title                    String?
  description              String?
  thumbnail                String?
  images                   String[]
  variants                 Variant[]
  isActive                 Boolean      @default(true)
  isFeatured               Boolean      @default(false)
  categories               String[]
  tags                     String[]
  ingredients              Ingredient[]
  faqs                     Faq[]
  carts                    Cart[]
  frequentlyBoughtProducts String[]     @db.ObjectId
  relatedProducts          String[]     @db.ObjectId
  createdAt                DateTime     @default(now())
  updatedAt                DateTime     @updatedAt
}

model Variant {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  product   Product  @relation(fields: [productId], references: [id])
  productId String   @db.ObjectId
  size      String
  price     Float
  stock     Int      @default(0)
  discount  Float?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Ingredient {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  product     Product  @relation(fields: [productId], references: [id])
  productId   String   @db.ObjectId
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Faq {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  product   Product  @relation(fields: [productId], references: [id])
  productId String   @db.ObjectId
  question  String
  answer    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  product   Product  @relation(fields: [productId], references: [id])
  productId String   @db.ObjectId
  quantity  Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
